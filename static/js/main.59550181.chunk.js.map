{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovieToList","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","query","setQuery","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","loading","setLoading","handleAddClick","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","findedMovie","Title","Plot","Poster","imdbID","finally","_Fragment","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","some","m","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59550181.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovieToList: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovieToList }) => {\n  const [movie, setMovie] = useState({} as Movie);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorMessage(false);\n  };\n\n  const handleAddClick = () => {\n    setLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setErrorMessage(true);\n        }\n\n        if ('Title' in response) {\n          const findedMovie = {\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          };\n\n          setMovie(findedMovie as Movie);\n        }\n      }).finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    handleAddClick();\n  };\n\n  const handleAddMovieToList = () => {\n    addMovieToList(movie);\n    setMovie({} as Movie);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorMessage ? 'is-danger' : ''}`}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!query}\n            >\n              {movie.title ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"contol\">\n          {movie.title && (\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovieToList}\n            >\n              Add to the list\n            </button>\n          )}\n        </div>\n      </form>\n      {movie.title && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = ' http://www.omdbapi.com/?i=tt3896198&apikey=4073d7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(m => m.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {/* лист відображення мого листа */}\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        {/* пошук на сервері та додавання до мого листа */}\n        <FindMovie addMovieToList={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}